package rockpaperscissors.GUI;
import  rockpaperscissors.*;

/**
 * Main GUI for the Rock Paper Scissors game.
 * @author Eric
 */
public class RockPaperScissorsGUI extends javax.swing.JFrame {

    private RockPaperScissorsGame rps;
    
    /**
     * Creates new form RockPaperScissorsGUI
     */
    public RockPaperScissorsGUI() 
    {
        initComponents();
        setEnabledFields(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rockButton = new javax.swing.JButton();
        paperButton = new javax.swing.JButton();
        scissorsButton = new javax.swing.JButton();
        AISelectorScrollPane = new javax.swing.JScrollPane();
        AISelector = new javax.swing.JList();
        matchLengthField = new javax.swing.JTextField();
        startButton = new javax.swing.JButton();
        scoreLabel = new javax.swing.JLabel();
        playerThrowLabel = new javax.swing.JLabel();
        computerThrowLabel = new javax.swing.JLabel();
        predictedThrowLabel = new javax.swing.JLabel();
        helpButton = new javax.swing.JButton();
        selectAILabel = new javax.swing.JLabel();
        roundLabel = new javax.swing.JLabel();
        currentRoundLabel = new javax.swing.JLabel();
        ofLabel = new javax.swing.JLabel();
        matchLengthLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenuItem = new javax.swing.JMenu();
        exitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Rock Paper Scissors Game (CR3W)");
        setResizable(false);

        rockButton.setText("Rock");
        rockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rockButtonActionPerformed(evt);
            }
        });

        paperButton.setText("Paper");
        paperButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paperButtonActionPerformed(evt);
            }
        });

        scissorsButton.setText("Scissor");
        scissorsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scissorsButtonActionPerformed(evt);
            }
        });

        AISelector.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Smart", "Random"};
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i].toUpperCase(); }
        });
        AISelectorScrollPane.setViewportView(AISelector);

        matchLengthField.setText(" ");

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        scoreLabel.setText("Score (Shown once match begins)");

        playerThrowLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        playerThrowLabel.setText("--");
        playerThrowLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        computerThrowLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        computerThrowLabel.setText("--");
        computerThrowLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        predictedThrowLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        predictedThrowLabel.setText("--");
        predictedThrowLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        helpButton.setText("Help");
        helpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        selectAILabel.setText("Select AI type:");

        roundLabel.setText("Round:");

        currentRoundLabel.setText("0");

        ofLabel.setText("of");

        matchLengthLabel.setText("0");

        jLabel1.setText("Player:");

        jLabel2.setText("Computer:");

        jLabel3.setText("Predicted:");

        fileMenuItem.setText("File");

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenuItem.add(exitMenuItem);

        menuBar.add(fileMenuItem);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selectAILabel)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AISelectorScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(matchLengthField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(startButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(helpButton)))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(roundLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(currentRoundLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ofLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(matchLengthLabel)
                                        .addGap(4, 4, 4))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rockButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(paperButton)))
                                .addGap(10, 10, 10)
                                .addComponent(scissorsButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(playerThrowLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(computerThrowLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(predictedThrowLabel, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(matchLengthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(startButton))
                        .addGap(18, 18, 18)
                        .addComponent(selectAILabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(roundLabel)
                            .addComponent(currentRoundLabel)
                            .addComponent(ofLabel)
                            .addComponent(matchLengthLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rockButton)
                            .addComponent(paperButton)
                            .addComponent(scissorsButton))))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(playerThrowLabel)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(computerThrowLabel)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(predictedThrowLabel)
                            .addComponent(jLabel3))
                        .addGap(19, 19, 19)
                        .addComponent(scoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AISelectorScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(helpButton)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        int matchLength;
        String selectedAI;
        
        //Gets match length and validates the number
        try
        {
            matchLength = Integer.parseInt(matchLengthField.getText().trim());
            if(matchLength < 1)
                throw new NumberFormatException();
        }
        catch(NumberFormatException e)
        {
            new ErrorGUI("Invalid match length, please reenter.").setVisible(true);
            return;
        }
        
        //Get Type of AI selected
        selectedAI = (String) AISelector.getSelectedValue();
        if(selectedAI == null)
        {
            new ErrorGUI("Please select an AI type").setVisible(true);
            return;
        }
        
        //Initialize RPS game
         rps = new RockPaperScissorsGame(matchLength-1, selectedAI.charAt(0));
        
        //Diable all non-game buttonss
        setEnabledFields(false);
        
        //Set match length label
        currentRoundLabel.setText("0");
        matchLengthLabel.setText(""+matchLength);
        scoreLabel.setText(rps.getScores());        
    }//GEN-LAST:event_startButtonActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void rockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rockButtonActionPerformed
        makeThrow(Match.ROCK);
    }//GEN-LAST:event_rockButtonActionPerformed

    private void paperButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paperButtonActionPerformed
        makeThrow(Match.PAPER);
    }//GEN-LAST:event_paperButtonActionPerformed

    private void scissorsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scissorsButtonActionPerformed
        makeThrow(Match.SCISSORS);
    }//GEN-LAST:event_scissorsButtonActionPerformed

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
        new HelpGUI().setVisible(true);
    }//GEN-LAST:event_helpButtonActionPerformed

    /**
     * Submits the player's throw to the main game
     * @param throwSelection players throw selection
     */
    private void makeThrow(int throwSelection)
    {
        
        if(!(rps.getMatch().isNotOver()))
            setEnabledFields(true);
        
        rps.matchHandler(throwSelection);
        
        currentRoundLabel.setText(""+rps.getMatch().getRound());
        playerThrowLabel.setText(ThrowConverter.convertToString(throwSelection));
        computerThrowLabel.setText(rps.getThrowGenerator().getPredictedThrow());
        predictedThrowLabel.setText(rps.getThrowGenerator().getComputersThrow());
        scoreLabel.setText(rps.getScores());
    }
    
    /**
     * Turns the non-gaming components on/off
     * Turns gaming components off/on
     * @param status boolean true (on) false (off)
     */
    private void setEnabledFields(boolean status)
    {
        //Sets non gaming button status
        startButton.setEnabled(status);
        AISelector.setEnabled(status);
        matchLengthField.setEnabled(status);
        
        //Sets game button status
        rockButton.setEnabled(!status);
        paperButton.setEnabled(!status);
        scissorsButton.setEnabled(!status);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RockPaperScissorsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RockPaperScissorsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RockPaperScissorsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RockPaperScissorsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new RockPaperScissorsGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList AISelector;
    private javax.swing.JScrollPane AISelectorScrollPane;
    private javax.swing.JLabel computerThrowLabel;
    private javax.swing.JLabel currentRoundLabel;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenuItem;
    private javax.swing.JButton helpButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField matchLengthField;
    private javax.swing.JLabel matchLengthLabel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JLabel ofLabel;
    private javax.swing.JButton paperButton;
    private javax.swing.JLabel playerThrowLabel;
    private javax.swing.JLabel predictedThrowLabel;
    private javax.swing.JButton rockButton;
    private javax.swing.JLabel roundLabel;
    private javax.swing.JButton scissorsButton;
    private javax.swing.JLabel scoreLabel;
    private javax.swing.JLabel selectAILabel;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables
}
